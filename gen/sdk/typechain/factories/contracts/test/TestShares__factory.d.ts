import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { TestShares, TestSharesInterface } from "../../../contracts/test/TestShares";
type TestSharesConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestShares__factory extends ContractFactory {
    constructor(...args: TestSharesConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<TestShares>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): TestShares;
    connect(signer: Signer): TestShares__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50612717806100206000396000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c80635daf08ca116100c3578063c2458d6b1161007c578063c2458d6b14610334578063c6c3bbe614610347578063e93119d91461035a578063e985e9c51461036d578063ec60bcf314610383578063f242432a1461039657600080fd5b80635daf08ca1461029a5780637032c2d7146102ad578063719ba034146102dc57806391ddadf4146102ef578063a22cb4651461030e578063bd85b0391461032157600080fd5b8063346e6c0e11610115578063346e6c0e146102005780633bdd1a19146102135780634ac9cbb2146102455780634bf5d7e91461025f5780634e1273f4146102675780634f558e791461028757600080fd5b8062fdd58e1461015c57806301fc20e21461018257806301ffc9a7146101955780630e89341c146101b85780632d760d57146101d85780632eb2c2d6146101eb575b600080fd5b61016f61016a366004611db7565b6103a9565b6040519081526020015b60405180910390f35b61016f610190366004611de1565b610444565b6101a86101a3366004611e1c565b6104ec565b6040519015158152602001610179565b6101cb6101c6366004611e39565b61053c565b6040516101799190611e98565b61016f6101e6366004611eab565b6105d0565b6101fe6101f936600461202a565b610690565b005b61016f61020e366004611db7565b6106dc565b6101fe6102213660046120d4565b6001600160a01b03166000908152609a60205260409020805460ff19166001179055565b61016f6102533660046120d4565b6001600160a01b031690565b6101cb6106fa565b61027a6102753660046120ef565b610792565b60405161017991906121f5565b6101a8610295366004611e39565b6108bc565b61016f6102a8366004611e39565b6108cf565b6101fe6102bb3660046120d4565b6001600160a01b03166000908152609a60205260409020805460ff19169055565b61016f6102ea366004611db7565b6108f5565b6102f761090b565b60405165ffffffffffff9091168152602001610179565b6101fe61031c366004612208565b61091b565b61016f61032f366004611e39565b61092a565b61016f610342366004611de1565b610941565b6101fe610355366004612244565b6109d2565b61016f610368366004612244565b610a01565b6101a861037b366004612280565b600192915050565b6101fe610391366004612244565b610a21565b6101fe6103a43660046122b3565b610a36565b60006001600160a01b0383166104195760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060008181526065602090815260408083206001600160a01b03861684529091529020545b92915050565b60008160000361045e57610457836108cf565b905061043e565b61046661090b565b65ffffffffffff1682106104bc5760405162461bcd60e51b815260206004820152601d60248201527f5368617265733a206d656d6265727320667574757265206c6f6f6b75700000006044820152606401610410565b6104dc6104c883610a7b565b600085815260996020526040902090610ae4565b6001600160e01b03169392505050565b60006001600160e01b03198216636cdb3d1360e11b148061051d57506001600160e01b031982166303a24d0760e21b145b8061043e57506301ffc9a760e01b6001600160e01b031983161461043e565b60606067805461054b90612318565b80601f016020809104026020016040519081016040528092919081815260200182805461057790612318565b80156105c45780601f10610599576101008083540402835291602001916105c4565b820191906000526020600020905b8154815290600101906020018083116105a757829003601f168201915b50505050509050919050565b6000816000036105eb576105e484846103a9565b9050610689565b6105f361090b565b65ffffffffffff1682106106495760405162461bcd60e51b815260206004820152601d60248201527f5368617265733a2062616c616e636520667574757265206c6f6f6b75700000006044820152606401610410565b61067d61065583610a7b565b60008581526097602090815260408083206001600160a01b038a168452909152902090610ae4565b6001600160e01b031690505b9392505050565b6001600160a01b0385163314806106ac57506106ac853361037b565b6106c85760405162461bcd60e51b815260040161041090612352565b6106d58585858585610b99565b5050505050565b60006001600160a01b0383166106f28184610941565b949350505050565b60604361070561090b565b65ffffffffffff161461075a5760405162461bcd60e51b815260206004820152601860248201527f566f7465733a2062726f6b656e20636c6f636b206d6f646500000000000000006044820152606401610410565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b606081518351146107f75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610410565b6000835167ffffffffffffffff81111561081357610813611ede565b60405190808252806020026020018201604052801561083c578160200160208202803683370190505b50905060005b84518110156108b457610887858281518110610860576108606123a0565b602002602001015185838151811061087a5761087a6123a0565b60200260200101516103a9565b828281518110610899576108996123a0565b60209081029190910101526108ad816123cc565b9050610842565b509392505050565b6000806108c88361092a565b1192915050565b60008181526099602052604081206108e690610d95565b6001600160e01b031692915050565b60006001600160a01b0383166106f28184610444565b600061091643610dcf565b905090565b610926338383610e36565b5050565b60008181526098602052604081206108e690610d95565b600081600003610954576104578361092a565b61095c61090b565b65ffffffffffff1682106109b25760405162461bcd60e51b815260206004820152601c60248201527f5368617265733a20737570706c7920667574757265206c6f6f6b7570000000006044820152606401610410565b6104dc6109be83610a7b565b600085815260986020526040902090610ae4565b60006001600160a01b03841690506109fb83828460405180602001604052806000815250610f16565b50505050565b60006001600160a01b038316610a188582856105d0565b95945050505050565b6001600160a01b0383166109fb83828461104a565b6001600160a01b038516331480610a525750610a52853361037b565b610a6e5760405162461bcd60e51b815260040161041090612352565b6106d585858585856111e8565b600063ffffffff821115610ae05760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610410565b5090565b815460009081816005811115610b41576000610aff84611332565b610b0990856123e5565b60008881526020902090915081015463ffffffff9081169087161015610b3157809150610b3f565b610b3c8160016123f8565b92505b505b6000610b4f8787858561141a565b90508015610b8b57610b7487610b666001846123e5565b600091825260209091200190565b5464010000000090046001600160e01b0316610b8e565b60005b979650505050505050565b8151835114610bfb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610410565b6001600160a01b038416610c215760405162461bcd60e51b81526004016104109061240b565b33610c30818787878787611470565b60005b8451811015610d19576000858281518110610c5057610c506123a0565b602002602001015190506000858381518110610c6e57610c6e6123a0565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015610cbf5760405162461bcd60e51b815260040161041090612450565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610cfe9084906123f8565b9250508190555050505080610d12906123cc565b9050610c33565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610d6992919061249a565b60405180910390a4610d7f818787878787611475565b610d8d81878787878761167c565b505050505050565b80546000908015610dc657610daf83610b666001846123e5565b5464010000000090046001600160e01b0316610689565b60009392505050565b600065ffffffffffff821115610ae05760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610410565b816001600160a01b0316836001600160a01b031603610ea95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610410565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610f765760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610410565b336000610f82856117d7565b90506000610f8f856117d7565b9050610fa083600089858589611470565b60008681526065602090815260408083206001600160a01b038b16845290915281208054879290610fd29084906123f8565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461103283600089858589611475565b61104183600089898989611822565b50505050505050565b6001600160a01b0383166110ac5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610410565b3360006110b8846117d7565b905060006110c5846117d7565b90506110e583876000858560405180602001604052806000815250611470565b60008581526065602090815260408083206001600160a01b038a168452909152902054848110156111645760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610410565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461104184886000868660405180602001604052806000815250611475565b6001600160a01b03841661120e5760405162461bcd60e51b81526004016104109061240b565b33600061121a856117d7565b90506000611227856117d7565b9050611237838989858589611470565b60008681526065602090815260408083206001600160a01b038c1684529091529020548581101561127a5760405162461bcd60e51b815260040161041090612450565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906112b99084906123f8565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611319848a8a86868a611475565b611327848a8a8a8a8a611822565b505050505050505050565b60008160000361134457506000919050565b60006001611351846118dd565b901c6001901b9050600181848161136a5761136a6124bf565b048201901c90506001818481611382576113826124bf565b048201901c9050600181848161139a5761139a6124bf565b048201901c905060018184816113b2576113b26124bf565b048201901c905060018184816113ca576113ca6124bf565b048201901c905060018184816113e2576113e26124bf565b048201901c905060018184816113fa576113fa6124bf565b048201901c905061068981828581611414576114146124bf565b04611971565b60005b818310156108b45760006114318484611987565b60008781526020902090915063ffffffff86169082015463ffffffff16111561145c5780925061146a565b6114678160016123f8565b93505b5061141d565b610d8d565b81518351146114d65760405162461bcd60e51b815260206004820152602760248201527f5368617265733a2069647320616e6420616d6f756e7473206c656e677468206d6044820152660d2e6dac2e8c6d60cb1b6064820152608401610410565b6001600160a01b03851615806114f357506001600160a01b038416155b8061151657506001600160a01b0384166000908152609a602052604090205460ff165b61157c5760405162461bcd60e51b815260206004820152603160248201527f5368617265733a206f6e6c79207265676973746572656420686f6c6465722063604482015270616e20726563656976652073686172657360781b6064820152608401610410565b60005b835181101561167657600084828151811061159c5761159c6123a0565b602002602001015190506115cb8188888786815181106115be576115be6123a0565b60200260200101516119a2565b6001600160a01b038716156116655760008181526097602090815260408083206001600160a01b038b168452909152902061160590610d95565b6001600160e01b031661161888836103a9565b146116655760405162461bcd60e51b815260206004820152601a60248201527f5368617265733a20696e76616c696420636865636b706f696e740000000000006044820152606401610410565b5061166f816123cc565b905061157f565b50610d8d565b6001600160a01b0384163b15610d8d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906116c090899089908890889088906004016124d5565b6020604051808303816000875af19250505080156116fb575060408051601f3d908101601f191682019092526116f891810190612533565b60015b6117a757611707612550565b806308c379a003611740575061171b61256c565b806117265750611742565b8060405162461bcd60e51b81526004016104109190611e98565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610410565b6001600160e01b0319811663bc197c8160e01b146110415760405162461bcd60e51b8152600401610410906125f6565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611811576118116123a0565b602090810291909101015292915050565b6001600160a01b0384163b15610d8d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611866908990899088908890889060040161263e565b6020604051808303816000875af19250505080156118a1575060408051601f3d908101601f1916820190925261189e91810190612533565b60015b6118ad57611707612550565b6001600160e01b0319811663f23a6e6160e01b146110415760405162461bcd60e51b8152600401610410906125f6565b600080608083901c156118f257608092831c92015b604083901c1561190457604092831c92015b602083901c1561191657602092831c92015b601083901c1561192857601092831c92015b600883901c1561193a57600892831c92015b600483901c1561194c57600492831c92015b600283901c1561195e57600292831c92015b600183901c1561043e5760010192915050565b60008183106119805781610689565b5090919050565b60006119966002848418612678565b610689908484166123f8565b6001600160a01b0383166119d65760008481526098602052604090206119d390611a116119ce84611a1d565b611a86565b50505b6001600160a01b038216611a05576000848152609860205260409020611a0290611acf6119ce84611a1d565b50505b6109fb84848484611adb565b6000610689828461269a565b60006001600160e01b03821115610ae05760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610410565b600080611ac2611aa4611a9761090b565b65ffffffffffff16610a7b565b611aba611ab088610d95565b868863ffffffff16565b879190611bef565b915091505b935093915050565b600061068982846126c1565b816001600160a01b0316836001600160a01b031614158015611afd5750600081115b156109fb576001600160a01b03831615611b7b5760008481526097602090815260408083206001600160a01b03871684529091528120611b4390611acf6119ce85611a1d565b915050806001600160e01b0316600003611b79576000858152609960205260409020611b7690611acf6119ce6001611a1d565b50505b505b6001600160a01b038216156109fb5760008481526097602090815260408083206001600160a01b03861684529091528120611bbc90611a116119ce85611a1d565b509050806001600160e01b03166000036106d557600085815260996020526040902061104190611a116119ce6001611a1d565b600080611ac2858585825460009081908015611d41576000611c1687610b666001856123e5565b60408051808201909152905463ffffffff8082168084526401000000009092046001600160e01b031660208401529192509087161015611c985760405162461bcd60e51b815260206004820152601b60248201527f436865636b706f696e743a2064656372656173696e67206b65797300000000006044820152606401610410565b805163ffffffff808816911603611ce15784611cb988610b666001866123e5565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055611d31565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b602001519250839150611ac79050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a815291822095519251909316640100000000029190931617920191909155905081611ac7565b80356001600160a01b0381168114611db257600080fd5b919050565b60008060408385031215611dca57600080fd5b611dd383611d9b565b946020939093013593505050565b60008060408385031215611df457600080fd5b50508035926020909101359150565b6001600160e01b031981168114611e1957600080fd5b50565b600060208284031215611e2e57600080fd5b813561068981611e03565b600060208284031215611e4b57600080fd5b5035919050565b6000815180845260005b81811015611e7857602081850181015186830182015201611e5c565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006106896020830184611e52565b600080600060608486031215611ec057600080fd5b611ec984611d9b565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611f1a57611f1a611ede565b6040525050565b600067ffffffffffffffff821115611f3b57611f3b611ede565b5060051b60200190565b600082601f830112611f5657600080fd5b81356020611f6382611f21565b604051611f708282611ef4565b83815260059390931b8501820192828101915086841115611f9057600080fd5b8286015b84811015611fab5780358352918301918301611f94565b509695505050505050565b600082601f830112611fc757600080fd5b813567ffffffffffffffff811115611fe157611fe1611ede565b604051611ff8601f8301601f191660200182611ef4565b81815284602083860101111561200d57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561204257600080fd5b61204b86611d9b565b945061205960208701611d9b565b9350604086013567ffffffffffffffff8082111561207657600080fd5b61208289838a01611f45565b9450606088013591508082111561209857600080fd5b6120a489838a01611f45565b935060808801359150808211156120ba57600080fd5b506120c788828901611fb6565b9150509295509295909350565b6000602082840312156120e657600080fd5b61068982611d9b565b6000806040838503121561210257600080fd5b823567ffffffffffffffff8082111561211a57600080fd5b818501915085601f83011261212e57600080fd5b8135602061213b82611f21565b6040516121488282611ef4565b83815260059390931b850182019282810191508984111561216857600080fd5b948201945b8386101561218d5761217e86611d9b565b8252948201949082019061216d565b965050860135925050808211156121a357600080fd5b506121b085828601611f45565b9150509250929050565b600081518084526020808501945080840160005b838110156121ea578151875295820195908201906001016121ce565b509495945050505050565b60208152600061068960208301846121ba565b6000806040838503121561221b57600080fd5b61222483611d9b565b91506020830135801515811461223957600080fd5b809150509250929050565b60008060006060848603121561225957600080fd5b61226284611d9b565b925061227060208501611d9b565b9150604084013590509250925092565b6000806040838503121561229357600080fd5b61229c83611d9b565b91506122aa60208401611d9b565b90509250929050565b600080600080600060a086880312156122cb57600080fd5b6122d486611d9b565b94506122e260208701611d9b565b93506040860135925060608601359150608086013567ffffffffffffffff81111561230c57600080fd5b6120c788828901611fb6565b600181811c9082168061232c57607f821691505b60208210810361234c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016123de576123de6123b6565b5060010190565b8181038181111561043e5761043e6123b6565b8082018082111561043e5761043e6123b6565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006124ad60408301856121ba565b8281036020840152610a1881856121ba565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b0386811682528516602082015260a060408201819052600090612501908301866121ba565b828103606084015261251381866121ba565b905082810360808401526125278185611e52565b98975050505050505050565b60006020828403121561254557600080fd5b815161068981611e03565b600060033d11156125695760046000803e5060005160e01c5b90565b600060443d101561257a5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156125aa57505050505090565b82850191508151818111156125c25750505050505090565b843d87010160208285010111156125dc5750505050505090565b6125eb60208286010187611ef4565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090610b8e90830184611e52565b60008261269557634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b038181168382160190808211156126ba576126ba6123b6565b5092915050565b6001600160e01b038281168282160390808211156126ba576126ba6123b656fea2646970667358221220de684b7a2c788a8916f627c76bedfd51db90cf0c371f449b409aecd4b745264564736f6c63430008120033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "ids";
            readonly type: "uint256[]";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "values";
            readonly type: "uint256[]";
        }];
        readonly name: "TransferBatch";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "TransferSingle";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "value";
            readonly type: "string";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "URI";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "CLOCK_MODE";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "shareId";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "accounts";
            readonly type: "address[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "ids";
            readonly type: "uint256[]";
        }];
        readonly name: "balanceOfBatch";
        readonly outputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "shareId";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "burnFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "clock";
        readonly outputs: readonly [{
            readonly internalType: "uint48";
            readonly name: "";
            readonly type: "uint48";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "shareId";
            readonly type: "address";
        }];
        readonly name: "convertSharesId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "holder";
            readonly type: "address";
        }];
        readonly name: "deregisteHolder";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "exists";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly name: "members";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "members";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "shareId";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly name: "members";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "shareId";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "mint";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "holder";
            readonly type: "address";
        }];
        readonly name: "registeHolder";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "ids";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "amounts";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeBatchTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "shareId";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "uri";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): TestSharesInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestShares;
}
export {};
