"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MakeFriendCoin__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract ILauncher",
                name: "_launcher",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "burnFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "subtractedValue",
                type: "uint256",
            },
        ],
        name: "decreaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "addedValue",
                type: "uint256",
            },
        ],
        name: "increaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "launcher",
        outputs: [
            {
                internalType: "contract ILauncher",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "maxTotalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a06040523480156200001157600080fd5b50604051620015a8380380620015a88339810160408190526200003491620000d3565b6040518060400160405280601081526020016f26b0b5b290233934b2b7321021b7b4b760811b815250604051806040016040528060038152602001624d464360e81b81525081600390816200008a9190620001aa565b506004620000998282620001aa565b5050600580546001600160a01b0319166001600160a01b039390931692909217909155506b33b2e3c9fd0803ce8000000060805262000276565b600060208284031215620000e657600080fd5b81516001600160a01b0381168114620000fe57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013057607f821691505b6020821081036200015157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001a557600081815260208120601f850160051c81016020861015620001805750805b601f850160051c820191505b81811015620001a1578281556001016200018c565b5050505b505050565b81516001600160401b03811115620001c657620001c662000105565b620001de81620001d784546200011b565b8462000157565b602080601f831160018114620002165760008415620001fd5750858301515b600019600386901b1c1916600185901b178555620001a1565b600085815260208120601f198616915b82811015620002475788860151825594840194600190910190840162000226565b5085821015620002665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161130f620002996000396000818161019b0152610ae2015261130f6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806340c10f191161009757806395d89b411161006657806395d89b4114610243578063a457c2d71461024b578063a9059cbb1461025e578063dd62ed3e1461027157600080fd5b806340c10f19146101df57806342966c68146101f457806370a082311461020757806379cc67901461023057600080fd5b806323b872dd116100d357806323b872dd146101835780632ab4d05214610196578063313ce567146101bd57806339509351146101cc57600080fd5b806306fdde0314610105578063095ea7b31461012357806316eebd1e1461014657806318160ddd14610171575b600080fd5b61010d610284565b60405161011a91906110ba565b60405180910390f35b610136610131366004611124565b610316565b604051901515815260200161011a565b600554610159906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b6002545b60405190815260200161011a565b61013661019136600461114e565b610330565b6101757f000000000000000000000000000000000000000000000000000000000000000081565b6040516012815260200161011a565b6101366101da366004611124565b610354565b6101f26101ed366004611124565b610376565b005b6101f261020236600461118a565b6103e3565b6101756102153660046111a3565b6001600160a01b031660009081526020819052604090205490565b6101f261023e366004611124565b6103f0565b61010d610405565b610136610259366004611124565b610414565b61013661026c366004611124565b61048f565b61017561027f3660046111be565b61049d565b606060038054610293906111f1565b80601f01602080910402602001604051908101604052809291908181526020018280546102bf906111f1565b801561030c5780601f106102e15761010080835404028352916020019161030c565b820191906000526020600020905b8154815290600101906020018083116102ef57829003601f168201915b5050505050905090565b6000336103248185856104c8565b60019150505b92915050565b60003361033e8582856105ed565b610349858585610667565b506001949350505050565b600033610324818585610367838361049d565b610371919061122b565b6104c8565b6005546001600160a01b031633146103d55760405162461bcd60e51b815260206004820152601f60248201527f4d46433a2063616c6c6572206973206e6f7420746865206c61756e636865720060448201526064015b60405180910390fd5b6103df8282610816565b5050565b6103ed33826108e1565b50565b6103fb8233836105ed565b6103df82826108e1565b606060048054610293906111f1565b60003381610422828661049d565b9050838110156104825760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103cc565b61034982868684036104c8565b600033610324818585610667565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661052a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cc565b6001600160a01b03821661058b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105f9848461049d565b9050600019811461066157818110156106545760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103cc565b61066184848484036104c8565b50505050565b6001600160a01b0383166106cb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cc565b6001600160a01b03821661072d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cc565b610738838383610a17565b6001600160a01b038316600090815260208190526040902054818110156107b05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610661565b6001600160a01b03821661086c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103cc565b61087860008383610a17565b806002600082825461088a919061122b565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166109415760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103cc565b61094d82600083610a17565b6001600160a01b038216600090815260208190526040902054818110156109c15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103cc565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105e0565b60055460405163b36d691960e01b81526001600160a01b0385811660048301529091169063b36d691990602401602060405180830381865afa158015610a61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a85919061124c565b15610ad25760405162461bcd60e51b815260206004820152601a60248201527f4d46433a2066726f6d20697320696e20626c61636b206c69737400000000000060448201526064016103cc565b6001600160a01b038316610b76577f000000000000000000000000000000000000000000000000000000000000000081610b0b60025490565b610b15919061122b565b1115610b765760405162461bcd60e51b815260206004820152602a60248201527f4d46433a20746f74616c20737570706c792065786365656473206d617820746f60448201526974616c20737570706c7960b01b60648201526084016103cc565b600560009054906101000a90046001600160a01b03166001600160a01b031663c7a74a736040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bed919061124c565b61109d576005546040516301fd3f7760e71b81526001600160a01b0384811660048301529091169063fe9fbb8090602401602060405180830381865afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f919061124c565b610cab5760405162461bcd60e51b815260206004820152601b60248201527f4d46433a206f6e6c79207472616e7366657220746f207472696265000000000060448201526064016103cc565b6001600160a01b0383161561109d5760055460405163061c9ad960e31b81526001600160a01b03848116600483015260009216906330e4d6c890602401602060405180830381865afa158015610d05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d29919061126e565b11610d905760405162461bcd60e51b815260206004820152603160248201527f4d46433a20746172676574207472696265207368617265326561726e2072656d60448201527061696e2074696d6573206973207a65726f60781b60648201526084016103cc565b600554604051637bc2221f60e11b81526001600160a01b038581166004830152600092610e0a9291169063f784443e90602401602060405180830381865afa158015610de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e04919061126e565b836110a2565b6005546040516306a49ce160e51b81526001600160a01b038781166004830152868116602483015260448201849052929350600092610f0b92169063d4939c2090606401602060405180830381865afa158015610e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8f919061126e565b600560009054906101000a90046001600160a01b03166001600160a01b0316633f1f0a2a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f06919061126e565b6110a2565b600554604051634ff1b90760e01b81526001600160a01b03888116600483015287811660248301526044820186905260648201849052929350911690634ff1b90790608401600060405180830381600087803b158015610f6a57600080fd5b505af1158015610f7e573d6000803e3d6000fd5b505050506000600560009054906101000a90046001600160a01b03166001600160a01b03166371d922a36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb919061126e565b9050808461101e876001600160a01b031660009081526020819052604090205490565b611028919061122b565b11156110465760405162461bcd60e51b81526004016103cc90611287565b8082611067886001600160a01b031660009081526020819052604090205490565b611071919061122b565b111561108f5760405162461bcd60e51b81526004016103cc90611287565b6110998683610816565b5050505b505050565b60008183106110b157816110b3565b825b9392505050565b600060208083528351808285015260005b818110156110e7578581018301518582016040015282016110cb565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461111f57600080fd5b919050565b6000806040838503121561113757600080fd5b61114083611108565b946020939093013593505050565b60008060006060848603121561116357600080fd5b61116c84611108565b925061117a60208501611108565b9150604084013590509250925092565b60006020828403121561119c57600080fd5b5035919050565b6000602082840312156111b557600080fd5b6110b382611108565b600080604083850312156111d157600080fd5b6111da83611108565b91506111e860208401611108565b90509250929050565b600181811c9082168061120557607f821691505b60208210810361122557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561032a57634e487b7160e01b600052601160045260246000fd5b60006020828403121561125e57600080fd5b815180151581146110b357600080fd5b60006020828403121561128057600080fd5b5051919050565b60208082526032908201527f4d46433a207461726765742074726962652062616c616e6365206578636565646040820152711cc81b585e081a1bdb191948185b5bdd5b9d60721b60608201526080019056fea26469706673582212205da7506ea36e43a0cfcf513e6aaa06ef2a4fa5403919d19b54edb1eeae7f677664736f6c63430008120033";
const isSuperArgs = (xs) => xs.length > 1;
class MakeFriendCoin__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_launcher, overrides) {
        return super.deploy(_launcher, overrides || {});
    }
    getDeployTransaction(_launcher, overrides) {
        return super.getDeployTransaction(_launcher, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MakeFriendCoin__factory = MakeFriendCoin__factory;
MakeFriendCoin__factory.bytecode = _bytecode;
MakeFriendCoin__factory.abi = _abi;
